


; PSS
; #IfWinActive ahk_exe dnplayer.exe
;     F13::
;         Send, {x down}j
;         Send, {l down}j
;         Send, {i down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Send, {i up}
;         Send, {l up}
;         Send, {x up}
;     return
; #If

; #IfWinActive ahk_exe dnplayer.exe
;     F13::
;         Send, {i down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Send, {i up}
;     return
; #If


; #Persistent
; SetTitleMatchMode, 2  ; This will match any window title containing the specified text.

; ; Hook into the Win+E key combination for opening File Explorer
; #e::
;     ; Check if an Explorer window already exists
;     IfWinExist, ahk_class CabinetWClass
;     {
;         ; Activate the existing window and send the hotkey to open a new tab
;         WinActivate
;         Send, ^t  ; This sends Ctrl + T to open a new tab
;     }
;     else
;     {
;         ; If no window exists, open File Explorer normally
;         Run, explorer.exe
;     }
;     return











    ; Action for F13 key
; F13::
; MsgBox, You pressed F13!
; return
; F14::
; MsgBox, You pressed F14!
; return
; ; Action for F14 key
; F15::
; MsgBox, You pressed F15!
; return
; F16::
; MsgBox, You pressed F16!
; return
; F17::
; MsgBox, You pressed F17!
; return




; Light-Attack1
; #IfWinActive ahk_exe dnplayer.exe
;     F13::
;         ; Send, {x down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Sleep, 100
;         ; Send, {x down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Sleep, 100
;         ; Send, {x down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Sleep, 100
;         ; Send, {x down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Sleep, 100
;         ; Send, {x down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Sleep, 100
;         ; Send, {x down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Sleep, 100
;         ; Send, {x up}
;         ; Send, {x down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Sleep, 100
;         ; Send, {x down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Sleep, 100
;         ; Send, {x down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Sleep, 100
;         ; Send, {x down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Sleep, 100
;         ; Send, {x down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Sleep, 100
;         ; Send, {x down}
;         Send, {d down}
;         Send, j
;         Send, j
;         Send, {d up}
;         Sleep, 100
;         ; Send, {x up}
;     return
; #If



;! continue untile f14 pressed // not sure if runs multiple instance??
; #IfWinActive ahk_exe dnplayer.exe
;     F13::
;         Toggle := !Toggle  ; Toggle the loop on/off
;         while (Toggle)  ; Loop while Toggle is true
;         {
;             if !WinActive("ahk_exe dnplayer.exe")  ; Check if dnplayer.exe is still active
;             {
;                 Toggle := false
;                 break
;             }
;             Send, {d down}
;             Send, j
;             Send, j
;             Send, {d up}
;             Sleep, 100  ; Adjust the delay as needed
;         }
;     return

;     F9::
;         Toggle := false  ; Stop the loop when F9 is pressed
;     return
; #If

; ;! continue untile f14 pressed
; #IfWinActive ahk_exe dnplayer.exe
;     F13::
;         if (Toggle)  ; If the loop is already running, do nothing
;             return
;         Toggle := true  ; Start the loop
;         while (Toggle)  ; Loop while Toggle is true
;         {
;             if !WinActive("ahk_exe dnplayer.exe")  ; Check if dnplayer.exe is still active
;             {
;                 Toggle := false
;                 break
;             }
;             Send, {x down}
;             Send, {d down}
;             Send, j
;             Send, j
;             Send, {d up}
;             Send, {x up}
;             Sleep, 100  ; Adjust the delay as needed
;         }
;     return

;     F9::
;         Toggle := false  ; Stop the loop when F9 is pressed
;     return
; #If



; ;; only send the shortcut to dnplayer
; #IfWinActive ahk_exe dnplayer.exe
;     F13::
;         StartTime := A_TickCount  ; Record the current time
;         while (A_TickCount - StartTime < 5000)  ; Run for 3000 milliseconds (3 seconds)
;         {
;             ; Send, {l down}
;             Send, {x down}
;             Send, {d down}
;             Send, j
;             Send, j
;             Send, {d up}
;             Send, {x up}
;             ; Send, {l up}
;             Sleep, 100  ; Adjust the delay as needed between iterations
;         }
;     return
; #If








;  ██████╗██╗  ██╗ ██████╗ ██████╗ ██████╗
; ██╔════╝██║  ██║██╔═══██╗██╔══██╗██╔══██╗
; ██║     ███████║██║   ██║██████╔╝██║  ██║
; ██║     ██╔══██║██║   ██║██╔══██╗██║  ██║
; ╚██████╗██║  ██║╚██████╔╝██║  ██║██████╔╝
;  ╚═════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚═════╝

; ChordSequence := ""
; TimerActive := False

; ; First keypress in the chord sequence
; ^f::  ; Ctrl + F
;     ChordSequence := "Ctrl+F"
;     TimerActive := True
;     SetTimer, CheckChordTimeout, -500  ; Timer to reset the chord sequence if not completed in 500ms
;     return

; ; Second keypress in the chord sequence for Explorer
; ^e::  ; Ctrl + E
;     if (ChordSequence = "Ctrl+F" && GetKeyState("Ctrl", "P")) {
;         ChordSequence := ""  ; Clear the sequence after successful match
;         TimerActive := False
;         ; Launch Windows Explorer
;         Run, explorer.exe
;     }
;     return

; ; Second keypress in the chord sequence for Terminal
; ^d::  ; Ctrl + D
;     if (ChordSequence = "Ctrl+F" && GetKeyState("Ctrl", "P")) {
;         ChordSequence := ""  ; Clear the sequence after successful match
;         TimerActive := False
;         ; Launch Windows Terminal
;         Run, wt.exe  ; Adjust path if needed
;     }
;     return

; ; Regular Ctrl + D functionality
; ^d up::  ; Ctrl + D released
;     if !(ChordSequence = "Ctrl+F") {
;         ; Perform normal Ctrl + D action here
;         Send, ^d
;     }
;     return

; ; Regular Ctrl + E functionality
; ^e up::  ; Ctrl + E released
;     if !(ChordSequence = "Ctrl+F") {
;         ; Perform normal Ctrl + E action here
;         Send, ^e
;     }
;     return

; ; Timer expirfation handler for timeout
; CheckChordTimeout:
;     if (ChordSequence = "Ctrl+F" && TimerActive) {
;         ; Send Ctrl+F if Ctrl+E or Ctrl+D is not pressed within 500ms
;         Send, ^f
;     }
;     ChordSequence := ""  ; Reset the sequence after handling timeout
;     TimerActive := False
;     return

; ; Ensure Ctrl is released if script is terminated or reset
; ^Esc::  ; Ctrl + Esc to exit the script
;     ExitApp






#=:: ; [Win]+[=]
    WinGet, window, ID, A
    InputBox, width, Resize, Width:, , 140, 130
    InputBox, height, Resize, Height:, , 140, 130
    WinMove, ahk_id %window%, , , , width, height
    return
