# Single line format - input on same line
format = "$directory$git_branch$git_state$git_status$python$nodejs$golang$rust$docker_context$package$terraform$cmd_duration$character"

[username]
disabled = true

[hostname]
disabled = true

# Replace the "‚ùØ" symbol in the prompt with "‚ûú"
[character]
success_symbol = "[‚ûú](bold green)"
error_symbol = "[‚úó](bold red)"

# configure directory with folder-like blue styling
[directory]
read_only = " "
truncation_length = 10
truncate_to_repo = true # truncates directory to root folder if in github repo
style = "bold blue"
format = "üìÅ [$path]($style)[$read_only]($read_only_style) "
use_os_path_sep = false
repo_root_style = "bold blue"

[cmd_duration]
min_time = 4
show_milliseconds = true
disabled = false
style = "bold italic red"
format = " ‚è±Ô∏è [$duration]($style)"

# [time]
# disabled = false
# format = '[üïí $time]($style) '
# time_format = "%A, %I:%M %P, %B %Y"  # 12-hour format
# utc_time_offset = "local"
# style = "bold bright-white"

# [aws]
# symbol = "  "

# [conda]
# symbol = " "

# [dart]
# symbol = " "

# [docker_context]
# symbol = " "
# format = "via [$symbol$context]($style) "
# style = "blue bold"
# only_with_files = true
# detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
# detect_folders = []
# disabled = false

# [elixir]
# symbol = " "

# [elm]
# symbol = " "

# [git_branch]
# symbol = " "

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
stashed = "[${count}*](green)" 
modified = "[${count}+](yellow)" 
deleted =  "[${count}-](red)" 
conflicted =  "[${count}~](red)" 
ahead = "‚á°${count}"
behind = "‚á£${count}"
untracked = "[${count}?](blue)" 
staged = "[${count}+](green)" 

[git_state]
style =	"bold red"
format = "[$state( $progress_current/$progress_total) ]($style)"
rebase = "rebase"
merge = "merge"	
revert = "revert"	
cherry_pick = "cherry"
bisect = "bisect"	
am = "am"	
am_or_rebase = "am/rebase"

[git_metrics]
disabled = false
added_style = "bold green"
deleted_style = "bold red"

# [golang]
# symbol = " "

# [hg_branch]
# symbol = " "

# [java]
# symbol = " "

# [julia]
# symbol = " "

# [haskell]
# symbol = "Œª "

# [memory_usage]
# symbol = " "

# [nim]
# symbol = " "

# [nix_shell]
# symbol = " "

# [package]
# symbol = " "

# [perl]
# symbol = " "

# [php]
# symbol = " "

[python]
disabled = true
symbol = "üêç "
#pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

# [ruby]
# symbol = " "

# [rust]
# symbol = " "

# [scala]
# symbol = " "

# [shlvl]
# symbol = " "

# [swift]
# symbol = "ÔØ£ "

# [nodejs]
# format = "via [ Node.js $version](bold green) "
# detect_files = ["package.json", ".node-version"]
# detect_folders = ["node_modules"]