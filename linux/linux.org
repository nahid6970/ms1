* :TOC:
- [[*install PARU pkg manager --> better version of pacman][install PARU pkg manager --> better version of pacman]]
- [[*install yay pkg manager][install yay pkg manager]]
- [[*nixos][nixos]]
- [[*Arch Desktop Environment (DE) xfce4][Arch Desktop Environment (DE) xfce4]]
- [[*Remove Usr Password][Remove Usr Password]]
- [[*Bashrc][Bashrc]]
  - [[*just input as command][just input as command]]
  - [[*Aliases][Aliases]]
  - [[*You can use whatever you want as an alias, like for Mondays:][You can use whatever you want as an alias, like for Mondays:]]
  - [[*Change Default Editor][Change Default Editor]]
  - [[*History Managemenst Using .bashrc][History Managemenst Using .bashrc]]
  - [[*random startup color][random startup color]]
  - [[*pkgfile][pkgfile]]
  - [[*find-the-command][find-the-command]]
- [[*Packages][Packages]]
- [[*INFO][INFO]]
  - [[*Command / Info][Command / Info]]
  - [[*sudo pacman -Rns $(pacman -Qdtq) # remove all dependency packages][sudo pacman -Rns $(pacman -Qdtq) # remove all dependency packages]]
  - [[*Useful Commands][Useful Commands]]
  - [[*Clear History ][Clear History ]]
  - [[*show size][show size]]
- [[*Partial UP-Arror][Partial UP-Arror]]
- [[*Auto Complete PKG Name][Auto Complete PKG Name]]
- [[*PATH][PATH]]
  - [[*nvim][nvim]]
  - [[*yazi][yazi]]
- [[*PKG Manager][PKG Manager]]
  - [[*Flatpak][Flatpak]]
  - [[*Snap][Snap]]
  - [[*APT][APT]]
- [[*Sandboxing][Sandboxing]]
  - [[*Lutris][Lutris]]
  - [[*bottle][bottle]]
  - [[*steam+proton][steam+proton]]
  - [[*heroic game launcher][heroic game launcher]]
- [[*Build NVIM][Build NVIM]]
  - [[*prequisite ][prequisite ]]
    - [[*Ubuntu / Debian][Ubuntu / Debian]]
    - [[*openSUSE][openSUSE]]
    - [[*Arch Linux][Arch Linux]]

flatpak appimage deb snap⁡
wsl --set-default-version 2

#! Failed to set locale, defaulting to C.UTF-8
## localectl set-locale LANG=en_US.UTF-8
https://www.tecmint.com/fix-failed-to-set-locale-defaulting-to-c-utf-8-in-centos/

#?   █████╗ ██████╗  ██████╗██╗  ██╗██╗     ██╗███╗   ██╗██╗   ██╗██╗  ██╗
#?  ██╔══██╗██╔══██╗██╔════╝██║  ██║██║     ██║████╗  ██║██║   ██║╚██╗██╔╝
#?  ███████║██████╔╝██║     ███████║██║     ██║██╔██╗ ██║██║   ██║ ╚███╔╝ 
#?  ██╔══██║██╔══██╗██║     ██╔══██║██║     ██║██║╚██╗██║██║   ██║ ██╔██╗ 
#?  ██║  ██║██║  ██║╚██████╗██║  ██║███████╗██║██║ ╚████║╚██████╔╝██╔╝ ██╗
#?  ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚═╝  ╚═╝
pacman -Syu archlinux-keyring					# This step is necessary to use pacman


su root 
nano /etc/sudoers

## if the file cant be accessible use 
nano sudo  /etc/sudoers

## Then add the user below admin user like below syntax.
user_name ALL=(ALL)  ALL

## also to login use 
su username

sudo pacman-key --init
sudo pacman-key --populate archlinux

# If the issue persists, you may need to locate the key manually and trust it.
# Find the key ID in the error message (e.g., Levente Polyak (anthraxx) <levente@leventepolyak.net>).
gpg --recv-keys <key_id>
gpg --lsign-key <key_id>

# After refreshing the keyring and trusting the key, try upgrading the system again.
sudo pacman -Syu

sudo pacman -S bash-completion
sudo pacman -S zsh

* install PARU pkg manager --> better version of pacman
sudo pacman -S --needed base-devel
git clone https://aur.archlinux.org/paru.git
cd paru
makepkg -si

now install using
paru -S x [double tap TAB twice for suggestion]

* install yay pkg manager
sudo pacman -Syu
sudo pacman -S --needed base-devel git
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si
yay --version
yay -S package_name

* nixos

* Arch Desktop Environment (DE) xfce4
download https://sourceforge.net/projects/vcxsrv/

pacman -S xorg xorg-server
pacman -S xfce4
export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2; exit;}'):0.0
export LIBGL_ALWAYS_INDIRECT=1

* Remove Usr Password
remove sudo password
sudo vim /etc/sudoers.d/MY_USERNAME
add the following line:
MY_USERNAME ALL=(ALL) NOPASSWD:ALL
sudo vim /etc/sudoers.d/linux6970
linux6970 ALL=(ALL) NOPASSWD:ALL
🎯 one-line command below
echo "linux6970 ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/linux6970

* Bashrc
** just input as command
echo 'export XDG_DATA_HOME="$HOME/.local/share"' >> ~/.bashrc
echo 'export XDG_CONFIG_HOME="$HOME/.config"' >> ~/.bashrc
echo 'export XDG_STATE_HOME="$HOME/.local/state"' >> ~/.bashrc
echo 'export XDG_CACHE_HOME="$HOME/.cache"' >> ~/.bashrc

** Aliases
alias cls="clear"
alias pas="paru -Slq | fzf --multi --preview 'paru -Si {1}' | xargs -ro paru -S" # search packages using fzf
alias yazi="cd ~/.config && yazi cwd"

** You can use whatever you want as an alias, like for Mondays:
eval $(thefuck --alias fuck)

** Change Default Editor
export EDITOR=nvim

** History Managemenst Using .bashrc
shopt -s histappend
export HISTCONTROL=ignoreboth:erasedups
export PROMPT_COMMAND="history -n; history -w; history -c; history -r"
tac "$HISTFILE" | awk '!x[$0]++' > /tmp/tmpfile  &&
                tac /tmp/tmpfile > "$HISTFILE"
rm /tmp/tmpfile

** random startup color
colorscript random
colorscript bars

** pkgfile
source /usr/share/doc/pkgfile/command-not-found.bash
** find-the-command
source /usr/share/doc/find-the-command/ftc.bash

* Packages
Clang or GCC version 4.9+
make or make-guile
ninja-build gettext cmake unzip curl
htop -> task manager
rclone
thunar -> file explorer
fzf -> search tool
dolphin -> file explorer
ranger ------shell :set show_hidden! must go to directory
yazi ------  . to show hidden files
shell-color-scripts  # colorscript random
xdg-ninja # proper management of dir of home
glow
pkgfile  -- search file if command not found
or
find-the-command
cmp # Compare two files byte by byte.
tput # color text

* INFO
** Command / Info
rm PKGBUILD # remove pkgbuilds after installin
makepkg -si # build packages

** sudo pacman -Rns $(pacman -Qdtq) # remove all dependency packages
pacman -Q    /  -Q   x # list pkgs
pacman -Qi   /  -Qi  x # faster of -Si
pacman -Ql   /  -Ql  x # list pkg dir and files
pacman -Rc   /  -Rc  x #  if -Rns doesnt work it will
pacman -Rn   /  -Rn  x # Remove a package(s) and its configuration files
pacman -Rns  /  -Rns x # Remove a package(s) and all dependencies and configuration files
pacman -Rs   /  -Rs  x # Remove a package(s) and all dependencies by name
pacman -S    /  -S   x # install pkg
pacman -Sc   /  -Sc  x # Clean up all local caches. Options might limit what is actually cleaned.
pacman -Si   /  -Si  x # Show all or most information about a package. The tools' verbosity for the default command vary. But with options, the tools are on par with each other.
pacman -Ss   /  -Ss  x # search pkg
pacman -Sy   /  -Sy  x # Refresh the local package repository
pacman -Syu	/ paru  # Upgrade Packages - Install packages which have an older version already installed

rm * -r -f
here rm = remove
/mnt/c/path/* = select all files
-r = folder
-f = force
ls -a
-a = show all
-al = list view

** Useful Commands
cd, ls, du, file, find, mv, cp, wc, cat, less, mkdir, grep
unzip, strip, touch, finger, grep, mount, fsck, more, yes, fsck, fsck, fsck, umount, sleep.

** Clear History 
history -c

** show size
df
df -h # human readable size
du 
du /home -h
du -a -h /home/arch6970 | sort -n -r | head -n 20
rclone ncdu /home

* Partial UP-Arror
#Bash history search, partial + up-arrow
vim ~/.inputrc
# Respect default shortcuts.
$include /etc/inputrc
## arrow up
"\e[A":history-search-backward
## arrow down
"\e[B":history-search-forward
🎯 one-line command below
echo -e '# Respect default shortcuts.\n$include /etc/inputrc\n## arrow up\n"\e[A":history-search-backward\n## arrow down\n"\e[B":history-search-forward' > ~/.inputrc

* Auto Complete PKG Name
apt info bash-completion
sudo apt install bash-completion

## source it from ~/.bashrc or ~/.bash_profile ##
echo "source /etc/profile.d/bash_completion.sh" >> ~/.bashrc
 
## Another example Check and load it from ~/.bashrc or ~/.bash_profile ##
grep -wq '^source /etc/profile.d/bash_completion.sh' ~/.bashrc || echo 'source /etc/profile.d/bash_completion.sh'>>~/.bashrc

* PATH
~/.bashrc
mkdir ~/.config
** nvim
mkdir ~/.config/nvim/
cp /mnt/c/Users/nahid/OneDrive/Git/ms1/asset/linux/neovim/init.lua ~/.config/nvim/
** yazi
mkdir ~/.config/yazi/
cp /mnt/c/Users/nahid/OneDrive/Git/ms1/asset/linux/yazi/* ~/.config/yazi/

cd and cd ~ goes to same folder which is the main home page
cd ..
cp ~/.bashrc /mnt/c/Users/nahid/OneDrive/Git/ms1/asset/linux/ubuntu_bk/
cp /mnt/c/Users/nahid/OneDrive/Git/ms1/asset/linux/ubuntu_bk/.bashrc ~/.bashrc

* PKG Manager
** Flatpak
flatpak install https://flatpak.org/setup/
flatpak installation for ubuntu/deb
To install Flatpak on Ubuntu 18.10 (Cosmic Cuttlefish) or later, simply run:
sudo apt install flatpak
or
With older Ubuntu versions, the official Flatpak PPA is the recommended way to install Flatpak. To install it, run the following in a terminal:
sudo add-apt-repository ppa:flatpak/stable
sudo apt update
sudo apt install flatpak

sudo apt install gnome-software-plugin-flatpak
# sudo flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo # dont use this one creates issue
flatpak remote-add --if-not-exists --user flathub https://dl.flathub.org/repo/flathub.flatpakrepo

now type
flatpak install x
flatpak --help
Flatpak should not be used as root like apt for example
flatpak remove --all
** Snap
snap installation for linux distro https://snapcraft.io/docs/installing-snapd
for ubuntu
sudo apt install snapd
$ sudo snap install x
** APT
apt commands
sudo apt install x
sudo apt remove x
sudo apt update && sudo apt upgrade -y

* Sandboxing
** Lutris

** bottle

** steam+proton

** heroic game launcher
https://www.youtube.com/watch?v=Oqatqp4fjmM

* Build NVIM
** prequisite 
Clang or GCC version 4.9+
*** Ubuntu / Debian
sudo apt-get install ninja-build gettext cmake unzip curl
*** openSUSE
sudo zypper install ninja cmake gcc-c++ gettext-tools curl
*** Arch Linux
sudo pacman -S base-devel cmake unzip ninja curl
git clone https://github.com/neovim/neovim
sudo apt install make or make-guile
cd neovim && make CMAKE_BUILD_TYPE=RelWithDebInfo
== install using snap pls ==
