def get_net_speed():
    net_io = psutil.net_io_counters()
    upload_speed = convert_bytes(net_io.bytes_sent - get_net_speed.upload_speed_last)
    download_speed = convert_bytes(net_io.bytes_recv - get_net_speed.download_speed_last)
    get_net_speed.upload_speed_last = net_io.bytes_sent
    get_net_speed.download_speed_last = net_io.bytes_recv
    return f'U: {upload_speed} MB/s  D: {download_speed} MB/s'

def convert_bytes(bytes):
    mb = bytes / (1024 * 1024)
    return f'{mb:.2f}'  # Display two digits before and after the decimal point


old
def get_cpu_ram_info():
    cpu_usage = psutil.cpu_percent(interval=None)
    ram_usage = psutil.virtual_memory().percent
    return f'C: {cpu_usage}%  R: {ram_usage}%'

def get_disk_info():
    disk_c_usage = psutil.disk_usage('C:').percent
    disk_d_usage = psutil.disk_usage('D:').percent
    return f'C: {disk_c_usage}%  D: {disk_d_usage}%'

def get_net_speed():
    net_io = psutil.net_io_counters()
    upload_speed = convert_bytes(net_io.bytes_sent - get_net_speed.upload_speed_last)
    download_speed = convert_bytes(net_io.bytes_recv - get_net_speed.download_speed_last)
    get_net_speed.upload_speed_last = net_io.bytes_sent
    get_net_speed.download_speed_last = net_io.bytes_recv
    return f'U: {upload_speed}/s  D: {download_speed}/s'

def convert_bytes(bytes):
    kb = bytes / 1024
    mb = kb / 1024
    return f'{mb:.2f} MB' if mb > 1 else f'{kb:.2f} KB'

def update_info_labels():
    cpu_ram_label['text'] = get_cpu_ram_info()
    disk_label['text'] = get_disk_info()
    net_speed_label['text'] = get_net_speed()
    root.after(1000, update_info_labels)

def continuous_monitor():
    while True:
        cpu_ram_label['text'] = get_cpu_ram_info()
        disk_label['text'] = get_disk_info()
        net_speed_label['text'] = get_net_speed()
        time.sleep(1)

x_label = tk.Label(button_row1, text="X", bg="#e81123", fg="#ffffff", height=1, width=2, highlightthickness=1, font=("agency", 8, "bold"))
emoji_label = tk.Label(button_row1, text ='M', bg="blue", fg="#ffffff", height=1, width=2, highlightthickness=1, font=("agency", 8, "bold"))
cpu_ram_label = tk.Label(button_row1, font=('calibri', 9, 'bold'), width=15, highlightthickness=1, fg='#ffffff', bg="#1D2027", text="CPU and RAM")
disk_label = tk.Label(button_row1, font=('calibri', 9, 'bold'), width=15, highlightthickness=1, fg='#ffffff', bg="#1D2027", text="Hard Disk Usage")
net_speed_label = tk.Label(button_row1, font=('calibri', 9, 'bold'), width=21, highlightthickness=1, fg='#ffffff', bg="#1D2027", text="Network Speed")

cpu_ram_label.pack(side="left", padx=(0,3), pady=(5,0), anchor="ne")
disk_label.pack(side="left", padx=(0,3), pady=(5,0), anchor="ne")
net_speed_label.pack(side="left", padx=(0,3), pady=(5,0), anchor="ne")
emoji_label.pack(side="left", padx=(0,3), pady=(5,0), anchor="ne")
x_label.pack(side="left", padx=(0,3), pady=(5,0), anchor="ne")