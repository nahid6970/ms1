#+TITLE: Test Org-Babel Python Execution
#+AUTHOR: Your Name
#+DATE: [2025-01-04 Sat]


* Python Code Execution Test

This file contains Python code blocks to test if org-babel is working correctly in your Emacs setup.

** Simple Python Example

Press =C-c C-c= on the code block below to execute it:

#+BEGIN_SRC python :results output
print("Hello from Python in Org-mode!")
print("Current time:", end=" ")

import datetime
now = datetime.datetime.now()
print(now.strftime("%Y-%m-%d %H:%M:%S"))

# Simple calculation
numbers = [1, 2, 3, 4, 5]
total = sum(numbers)
print(f"Sum of {numbers} = {total}")
#+END_SRC

** Python with Variables

You can also use variables and return values:

#+BEGIN_SRC python :var name="World" :results value
greeting = f"Hello, {name}!"
calculation = 2 + 2
return f"{greeting} Math check: 2+2={calculation}"
#+END_SRC

** Python with Plot (if matplotlib is available)

#+BEGIN_SRC python :results file :file plot.png
import matplotlib.pyplot as plt
import numpy as np

# Create simple plot
x = np.linspace(0, 10, 100)
y = np.sin(x)

plt.figure(figsize=(8, 4))
plt.plot(x, y, 'b-', linewidth=2)
plt.title('Sine Wave')
plt.xlabel('x')
plt.ylabel('sin(x)')
plt.grid(True)
plt.savefig('plot.png', dpi=150, bbox_inches='tight')
plt.close()

return 'plot.png'
#+END_SRC

** PowerShell Examples

Since you're on Windows, here are some PowerShell examples:

*** Basic PowerShell Commands

#+BEGIN_SRC powershell :results output
Write-Host "Hello from PowerShell in Org-mode!"
Write-Host "Current date and time: $(Get-Date)"

# System information
Write-Host "Computer name: $env:COMPUTERNAME"
Write-Host "Username: $env:USERNAME"
Write-Host "PowerShell version: $($PSVersionTable.PSVersion)"
#+END_SRC

*** File System Operations

#+BEGIN_SRC powershell :results output
# Get current directory
Write-Host "Current directory: $(Get-Location)"

# List files in current directory
Write-Host "`nFiles in current directory:"
Get-ChildItem -Name | Select-Object -First 5 | ForEach-Object { Write-Host "  $_" }

# Check if Python is available
$pythonPath = Get-Command python -ErrorAction SilentlyContinue
if ($pythonPath) {
    Write-Host "`nPython found at: $($pythonPath.Source)"
} else {
    Write-Host "`nPython not found in PATH"
}
#+END_SRC

*** System Information

#+BEGIN_SRC powershell :results output
# Get system info
$os = Get-CimInstance -ClassName Win32_OperatingSystem
Write-Host "OS: $($os.Caption)"
Write-Host "Version: $($os.Version)"

# Memory info
$totalRAM = [math]::Round($os.TotalVisibleMemorySize / 1MB, 2)
$freeRAM = [math]::Round($os.FreePhysicalMemory / 1MB, 2)
Write-Host "Total RAM: $totalRAM GB"
Write-Host "Free RAM: $freeRAM GB"

# Disk space
$disk = Get-CimInstance -ClassName Win32_LogicalDisk -Filter "DeviceID='C:'"
$totalSpace = [math]::Round($disk.Size / 1GB, 2)
$freeSpace = [math]::Round($disk.FreeSpace / 1GB, 2)
Write-Host "C: Drive - Total: $totalSpace GB, Free: $freeSpace GB"
#+END_SRC

* Instructions

1. Open this file in Emacs
2. Place your cursor inside any code block
3. Press =C-c C-c= to execute the code
4. Results will appear below the code block

* Notes

- If Python execution doesn't work, you may need to add Python back to org-babel-load-languages
- Make sure Python is installed and accessible from your PATH
- For the plot example, you'll need matplotlib: =pip install matplotlib=

* Troubleshooting

If code execution doesn't work, add this to your init.el:

#+BEGIN_SRC emacs-lisp
(org-babel-do-load-languages
 'org-babel-load-languages
 '((emacs-lisp . t)
   (shell . t)
   (python . t)))  ; Add python back
#+END_SRC
