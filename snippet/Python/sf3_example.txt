{
  "New Feature Handler": {
    "prefix": "handler", 
    "body": [
      "def ${1:NewFeatureHandler}(button):",
      "    \"\"\"Toggles the new feature functionality.\"\"\"",
      "    state = getattr(${1:NewFeatureHandler}, \"state\", {\"thread\": None, \"stop_flag\": True})",
      "",
      "    if state[\"thread\"] and state[\"thread\"].is_alive():",
      "        # Stop the thread",
      "        state[\"stop_flag\"] = True",
      "        state[\"thread\"].join()",
      "        button.config(text=\"${2:New Feature}\", bg=\"#5a9b5a\", fg=\"#fff\")",
      "    else:",
      "        # Start the thread",
      "        state[\"stop_flag\"] = False",
      "",
      "        def ${1:NewFeatureHandler}Thread():",
      "            window = focus_window(window_title)",
      "            if not window:",
      "                print(f\"Window '{window_title}' not found.\")",
      "                return",
      "            try:",
      "                while not state[\"stop_flag\"]:",
      "                    focus_window(window_title)",
      "                    # Replace with your specific feature logic",
      "                    if find_image(${3:new_image}, confidence=0.8, region=(200, 100, 300, 200)):",
      "                        press_key(window, '${4:n}')",
      "                    time.sleep(0.1)",
      "            except KeyboardInterrupt:",
      "                print(\"Script stopped by user.\")",
      "",
      "        # Create and start the thread",
      "        thread = threading.Thread(target=${1:NewFeatureHandler}Thread)",
      "        thread.daemon = True",
      "        thread.start()",
      "",
      "        # Save the thread in the state dictionary",
      "        state[\"thread\"] = thread",
      "        button.config(text=\"Stop\", bg=\"#1d2027\", fg=\"#fc0000\")",
      "",
      "    ${1:NewFeatureHandler}.state = state",
      "",
      "# Create the button for the handler",
      "${5:NewFeatureButton} = Button(ROOT, text=\"${2:New Feature}\", bg=\"#5a9b5a\", fg=\"#fff\", width=5, height=2, command=lambda: ${1:NewFeatureHandler}(${5:NewFeatureButton}), font=(\"Jetbrainsmono nfp\", 10, \"bold\"), relief=\"flat\")",
      "${5:NewFeatureButton}.pack(padx=(1, 1), pady=(1, 1))"
    ],
    "description": "Creates a new handler function with its button for thread-based toggling."
  }
}
